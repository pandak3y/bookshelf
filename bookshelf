#!/usr/bin/env python
#
# bookshelf
# Copyright (C) 2020  Wyatt Pokorny <wyatt@pokorny.ca>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import csv
import json
import os
from shutil import copyfile

from jinja2 import Environment, FileSystemLoader


def get_books(path):
    if not os.path.exists(path):
        return
    f = open(path)
    reader = csv.DictReader(f)
    books = list(reader)

    for book in books:
        isbn = book.get('isbn')

        if not isbn:
            continue

        if len(isbn) < 10:
            zeros = 10 - len(isbn)
            zeros = '0' * zeros
            new_isbn = zeros + isbn
            book['isbn'] = new_isbn

    books.reverse()
    return books


def render(values, theme):
    env = Environment(loader=FileSystemLoader(theme))
    template = env.get_template('index.html')
    return template.render(values)


def ensure_build_directory(path):
    if os.path.exists(path):
        return
    os.mkdir(path)


def write_file(path, contents):
    with open(path, 'w') as f:
        f.write(contents)


def copy_css(path, theme):
    copyfile(theme + '/style.css', path + '/style.css')


def main(config):
    path = config['books']
    results = get_books(path)
    if not results:
        print("Couldn't get books")
        return

    ensure_build_directory(config['build'])
    values = {
        'books': results,
        'title': config['title'],
        'subtitle': config['subtitle']
    }

    html = render(values, config['theme'])
    write_file(config['build'] + '/index.html', html)
    copy_css(config['build'], config['theme'])


if __name__ == '__main__':
    import sys

    if len(sys.argv) == 1:
        print('missing config file')
        sys.exit(1)

    config_path = sys.argv[1]

    if not os.path.exists(config_path):
        print('config file does not exist')
        sys.exit(1)

    config = open(config_path).read()
    config = json.loads(config)

    main(config)
